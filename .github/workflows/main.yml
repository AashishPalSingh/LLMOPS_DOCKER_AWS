name: workflow

on:
  workflow_run:
    workflows: [ "preBuild" ]
    types:
      - completed

permissions:
  contents: read
  id-token: write

jobs:
  integration:
    name: Continous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Lint code
        run: |
          echo "Linting code.."

        # uses: github/super-linter@v5
        # with:
        #   github_token: ${{ secrets.GITHUB_TOKEN }}
        #   run_linter: true
        #   run_tests: false
        #   run_prettier: false
        #   run_markdownlint: false
        #   run_actionslint: false
        #   run_dockerfilelint: false
        #   run_yamllint: false

      - name: Run unit tests
        run: |
          echo "Running unit tests..."
  
  push-image:
    needs: [integration]
    runs-on: ubuntu-latest
    steps:
    - name: Repo Checkout
      uses: actions/checkout@v2

    - name: Login to Docker hub
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASS_TOKEN }}
      run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 

    - name: Build the Docker image for Fastapi app
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
      run: docker build . -f Dockerfile -t $DOCKER_USER/mymodel:v1

    - name: Push the Docker Image
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
      run: docker push $DOCKER_USER/mymodel:v1

    - name: Logout to Docker hub
      run: docker logout

  build-and-push-ecr-image:
    name: Continous Delivery
    runs-on: ubuntu-latest
    needs: push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag , and push image to amazon ecr
        id: build-image
        env:
          IMAGE_TAG: latest
        run: |
          echo "Building and pushing Docker image to Amazon ECR..."
          docker build -t ${{ secrets.AWS_ECR_REPO_URI }}:$IMAGE_TAG .
          docker push ${{ secrets.AWS_ECR_REPO_URI }}:$IMAGE_TAG
        
  # continous-deployment:
  #   name: Continous Deployment  
  #   needs: build-and-push-ecr-image
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

  #     - name: Log in to Amazon ECR
  #       id: ecr-login
  #       uses: aws-actions/amazon-ecr-login@v1

  #     - name: Pull latest images
  #       run: |
  #         docker pull ${{ secrets.AWS_ECR_REPO_URI }}:latest || true
